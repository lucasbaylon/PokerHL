{"ast":null,"code":"import { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\nimport io__default from 'socket.io-client';\nimport * as ɵngcc0 from '@angular/core';\n\nclass WrappedSocket {\n  constructor(config) {\n    this.config = config;\n    this.subscribersCounter = {};\n    this.eventObservables$ = {};\n    this.emptyConfig = {\n      url: '',\n      options: {}\n    };\n\n    if (config === undefined) {\n      config = this.emptyConfig;\n    }\n\n    const url = config.url;\n    const options = config.options;\n    const ioFunc = io__default ? io__default : io;\n    this.ioSocket = ioFunc(url, options);\n  }\n\n  of(namespace) {\n    this.ioSocket.of(namespace);\n  }\n\n  on(eventName, callback) {\n    this.ioSocket.on(eventName, callback);\n  }\n\n  once(eventName, callback) {\n    this.ioSocket.once(eventName, callback);\n  }\n\n  connect() {\n    return this.ioSocket.connect();\n  }\n\n  disconnect(_close) {\n    return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n  }\n\n  emit(_eventName, ..._args) {\n    return this.ioSocket.emit.apply(this.ioSocket, arguments);\n  }\n\n  removeListener(_eventName, _callback) {\n    return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n  }\n\n  removeAllListeners(_eventName) {\n    return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n  }\n\n  fromEvent(eventName) {\n    if (!this.subscribersCounter[eventName]) {\n      this.subscribersCounter[eventName] = 0;\n    }\n\n    this.subscribersCounter[eventName]++;\n\n    if (!this.eventObservables$[eventName]) {\n      this.eventObservables$[eventName] = new Observable(observer => {\n        const listener = data => {\n          observer.next(data);\n        };\n\n        this.ioSocket.on(eventName, listener);\n        return () => {\n          this.subscribersCounter[eventName]--;\n\n          if (this.subscribersCounter[eventName] === 0) {\n            this.ioSocket.removeListener(eventName, listener);\n            delete this.eventObservables$[eventName];\n          }\n        };\n      }).pipe(share());\n    }\n\n    return this.eventObservables$[eventName];\n  }\n\n  fromOneTimeEvent(eventName) {\n    return new Promise(resolve => this.once(eventName, resolve));\n  }\n\n}\n/** Socket factory */\n\n\nfunction SocketFactory(config) {\n  return new WrappedSocket(config);\n}\n\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\n\nclass SocketIoModule {\n  static forRoot(config) {\n    return {\n      ngModule: SocketIoModule,\n      providers: [{\n        provide: SOCKET_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: WrappedSocket,\n        useFactory: SocketFactory,\n        deps: [SOCKET_CONFIG_TOKEN]\n      }]\n    };\n  }\n\n}\n\nSocketIoModule.ɵfac = function SocketIoModule_Factory(t) {\n  return new (t || SocketIoModule)();\n};\n\nSocketIoModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: SocketIoModule\n});\nSocketIoModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SocketIoModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { WrappedSocket as Socket, SocketIoModule, SocketFactory as ɵa, SOCKET_CONFIG_TOKEN as ɵb };","map":{"version":3,"names":["InjectionToken","NgModule","Observable","share","io","io__default","ɵngcc0","WrappedSocket","constructor","config","subscribersCounter","eventObservables$","emptyConfig","url","options","undefined","ioFunc","ioSocket","of","namespace","on","eventName","callback","once","connect","disconnect","_close","apply","arguments","emit","_eventName","_args","removeListener","_callback","removeAllListeners","fromEvent","observer","listener","data","next","pipe","fromOneTimeEvent","Promise","resolve","SocketFactory","SOCKET_CONFIG_TOKEN","SocketIoModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","ɵfac","SocketIoModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args","Socket","ɵa","ɵb"],"sources":["D:/Travail/Non Scolaire/Projets/PokerTraining/node_modules/ngx-socket-io/__ivy_ngcc__/fesm2015/ngx-socket-io.js"],"sourcesContent":["import { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\nimport io__default from 'socket.io-client';\n\nimport * as ɵngcc0 from '@angular/core';\nclass WrappedSocket {\n    constructor(config) {\n        this.config = config;\n        this.subscribersCounter = {};\n        this.eventObservables$ = {};\n        this.emptyConfig = {\n            url: '',\n            options: {},\n        };\n        if (config === undefined) {\n            config = this.emptyConfig;\n        }\n        const url = config.url;\n        const options = config.options;\n        const ioFunc = io__default ? io__default : io;\n        this.ioSocket = ioFunc(url, options);\n    }\n    of(namespace) {\n        this.ioSocket.of(namespace);\n    }\n    on(eventName, callback) {\n        this.ioSocket.on(eventName, callback);\n    }\n    once(eventName, callback) {\n        this.ioSocket.once(eventName, callback);\n    }\n    connect() {\n        return this.ioSocket.connect();\n    }\n    disconnect(_close) {\n        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n    }\n    emit(_eventName, ..._args) {\n        return this.ioSocket.emit.apply(this.ioSocket, arguments);\n    }\n    removeListener(_eventName, _callback) {\n        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n    }\n    removeAllListeners(_eventName) {\n        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n    }\n    fromEvent(eventName) {\n        if (!this.subscribersCounter[eventName]) {\n            this.subscribersCounter[eventName] = 0;\n        }\n        this.subscribersCounter[eventName]++;\n        if (!this.eventObservables$[eventName]) {\n            this.eventObservables$[eventName] = new Observable((observer) => {\n                const listener = (data) => {\n                    observer.next(data);\n                };\n                this.ioSocket.on(eventName, listener);\n                return () => {\n                    this.subscribersCounter[eventName]--;\n                    if (this.subscribersCounter[eventName] === 0) {\n                        this.ioSocket.removeListener(eventName, listener);\n                        delete this.eventObservables$[eventName];\n                    }\n                };\n            }).pipe(share());\n        }\n        return this.eventObservables$[eventName];\n    }\n    fromOneTimeEvent(eventName) {\n        return new Promise(resolve => this.once(eventName, resolve));\n    }\n}\n\n/** Socket factory */\nfunction SocketFactory(config) {\n    return new WrappedSocket(config);\n}\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\nclass SocketIoModule {\n    static forRoot(config) {\n        return {\n            ngModule: SocketIoModule,\n            providers: [\n                { provide: SOCKET_CONFIG_TOKEN, useValue: config },\n                {\n                    provide: WrappedSocket,\n                    useFactory: SocketFactory,\n                    deps: [SOCKET_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n}\nSocketIoModule.ɵfac = function SocketIoModule_Factory(t) { return new (t || SocketIoModule)(); };\nSocketIoModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SocketIoModule });\nSocketIoModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SocketIoModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WrappedSocket as Socket, SocketIoModule, SocketFactory as ɵa, SOCKET_CONFIG_TOKEN as ɵb };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}